// Theme
//
// Theme variables, functions and mixins only.
// No rule definitions in here.
//
// Styleguide 1

// Points of reassembly
@import 'include-media/dist/include-media';

$breakpoints: (
  'phone': 320px,
  'tablet': 768px,
  'mobileNav': 860px,
  'desktop': 1024px
);

// Brand Colors
$Theme-color-fiord: #445c69;
$Theme-color-heather: #bec6d3;
$Theme-color-malachite: #19d374;
$Theme-color-paleSky: #627087;
$Theme-color-pictonBlue: #2aa7f0;
$Theme-color-ripeLemon: #f8e02d;
$Theme-color-tango: #f06f2a;
$Theme-color-white: #fff;
$Theme-color-sky: #ccedf2;
$Theme-color-grey: #b9d6db;

// Color Usage
$Theme-palette-text-body-default: $Theme-color-paleSky;

// Layers
$Theme-layer-images: 5;
$Theme-layer-hideImages: $Theme-layer-images + 1;
$Theme-layer-nav: $Theme-layer-images + 2;

// Spacing
$Theme-spacing-default: 50px;
$Theme-spacing-large: 100px;
$Theme-spacing-small: 25px;
$Theme-spacing-xSmall: 10px;

// Nav
$Theme-navbar-height: 60px;

// Typography
$Theme-typography-fontWeight-bold: 900;
$Theme-typography-fontWeight-medium: 500;
$Theme-typography-fontWeight-regular: 300;
$Theme-typography-sansSerif-fontFamily: "lato", sans-serif;
$Theme-font-sizes: (
  mobile: (
    sansSerif: (
      small: (
        font-size: 10px,
        line-height: 1.6 // 16px / 10px
      ),
      base: (
        font-size: 14px,
        line-height: 1.86 // 26px / 14px
      ),
      large: (
        font-size: 18px,
        line-height: 1.66 // 30px / 18px
      ),
      veryLarge: (
        font-size: 24px,
        line-height: 1.5 // 36px / 24px
      )
    )
  ),
  desktop: (
    sansSerif: (
      small: (
        font-size: 10px,
        line-height: 1.6 // 16px / 10px
      ),
      base: (
        font-size: 16px,
        line-height: 1.625 // 26px / 16px
      ),
      large: (
        font-size: 22px,
        line-height: 1.45 // 32px / 22px
      ),
      veryLarge: (
        font-size: 34px,
        line-height: 1.35 // 46px / 34px
      )
    )
  )
);

// font-size and line-height styles
@mixin font-properties($size: "base", $family: "sansSerif") {
  font-size: map-get(map-get(map-get(map-get($Theme-font-sizes, "mobile"), $family), $size), 'font-size');
  line-height: map-get(map-get(map-get(map-get($Theme-font-sizes, "mobile"), $family), $size), 'line-height');

  @include media(">=tablet") {
    font-size: map-get(map-get(map-get(map-get($Theme-font-sizes, "desktop"), $family), $size), 'font-size');
    line-height: map-get(map-get(map-get(map-get($Theme-font-sizes, "desktop"), $family), $size), 'line-height');
  }
}

// Common styles for headings
@mixin headingCommonStyles {
  font-weight: $Theme-typography-fontWeight-bold;
  text-transform: uppercase;
}

// Mixins for creating diagonal backgrounds
@mixin diagonalBackgroundCommonProperties($v-pad) {
  position: absolute;
  left: 0;
  width: 100%;
  padding-top: $v-pad;
  background-position: 0 0;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  pointer-events: none;
}

@mixin diagonalBackgroundImage($adjoiningBackgroundColor, $position, $inverted: false) {
  $triangle: "";
  $triangle-color: 'rgb(#{red($adjoiningBackgroundColor)}, #{green($adjoiningBackgroundColor)}, #{blue($adjoiningBackgroundColor)})';
  @if ($position == "top") {
    top: 0;
    @if ($inverted == false) {
      $triangle: '<polygon points="0,0 1,0 1,1" style="fill:#{$triangle-color};"></polygon>';
    } @else {
      $triangle: '<polygon points="0,0 0,1 1,0" style="fill:#{$triangle-color};"></polygon>';
    }
  } @else if ($position == "bottom") {
    bottom: 0;
    @if ($inverted == false) {
      $triangle: '<polygon points="0,0 0,1 1,1" style="fill:#{$triangle-color};"></polygon>';
    } @else {
      $triangle: '<polygon points="0,1 1,1 1,0" style="fill:#{$triangle-color};"></polygon>';
    }
  }
  background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none" width="1" height="1" viewBox="0 0 1 1" version="1.1">#{$triangle}</svg>');
}

@mixin diagonal-background($adjoiningBackgroundColor, $inverted: false, $position: "both", $startContentAfterTriangle: true, $forceFullHeight: false) {
  position: relative;

  @if ($position == "top" or $position == "both") {
    padding-top: 30px;

    &:before {
      @include diagonalBackgroundCommonProperties(30px);
      @include diagonalBackgroundImage($adjoiningBackgroundColor, top, $inverted);
      content: '';
      @if ($forceFullHeight == true) {
        height: 100%;
      }
    }

    @include media(">=450px") {
      padding-top: 45px;

      &:before {
        @include diagonalBackgroundCommonProperties(45px);
      }
    }

    @include media(">=tablet") {
      padding-top: 60px;

      &:before {
        @include diagonalBackgroundCommonProperties(60px);
      }
    }

    @include media(">=912px") {
      @if ($startContentAfterTriangle == true) {
        padding-top: 90px;
      }

      &:before {
        @include diagonalBackgroundCommonProperties(90px);
      }
    }

    @include media(">=desktop") {
      @if ($startContentAfterTriangle == true) {
        padding-top: 120px;
      }

      &:before {
        @include diagonalBackgroundCommonProperties(120px);
      }
    }
  }

  @if ($position == "bottom" or $position == "both") {
    padding-bottom: 30px;

    &:after {
      @include diagonalBackgroundCommonProperties(30px);
      @include diagonalBackgroundImage($adjoiningBackgroundColor, bottom, $inverted);
      content: '';
      z-index: $Theme-layer-hideImages; // I'm assuming that I will only want to hide/clip the bottom part of the container
      @if ($forceFullHeight == true) {
        height: 100%;
      }
    }

    @include media(">=450px") {
      padding-bottom: 45px;

      &:after {
        @include diagonalBackgroundCommonProperties(45px);
      }
    }

    @include media(">=tablet") {
      padding-bottom: 60px;

      &:after {
        @include diagonalBackgroundCommonProperties(60px);
      }
    }

    @include media(">=912px") {
      @if ($startContentAfterTriangle == true) {
        padding-bottom: 90px;
      }

      &:after {
        @include diagonalBackgroundCommonProperties(90px);
      }
    }

    @include media(">=desktop") {
      @if ($startContentAfterTriangle == true) {
        padding-bottom: 120px;
      }

      &:after {
        @include diagonalBackgroundCommonProperties(120px);
      }
    }
  }
}
